#ifndef __TGA_H__// Определяем был ли заголовочный файл определен ранее
#define __TGA_H__// Если нет, определяем его

#pragma comment(lib, "OpenGL32.lib") // Линкуем Opengl32.lib
#include <windows.h> // Стандартный заголовочный файл Windows
#include <stdio.h> // Стандартный заголовочный файл для функций ввода/вывода
#include <gl\gl.h> // Стандартных заголовочный файл для OpenGL

//Для хранения изображения и информации необходимой 
//для генерирования текстур OpenGL мы будем использовать следующую структуру.

 

typedef struct
{
    GLubyte* imageData; // Содержит всю информацию о цвете изображения
    GLuint  bpp;        // Содержит количество бит на пиксель      
    GLuint width;       // Ширина изображения  
    GLuint height;      // Высота изображения  
    GLuint texID;       // идентификатор текстуры для использования совместно с glBindTexture.  
    GLuint type;        // Информация хранимая в * ImageData (GL_RGB или GL_RGBA)
}
Texture;

//Затем следует еще 2 структуры, используемые для обработки TGA файла.

typedef struct
{
    GLubyte Header[12];   // Заголовок файла определяющий его тип
} 
TGAHeader;

   
typedef struct
{
    GLubyte header[6];    // Содержит первые полезные 6 байт файла
    GLuint bytesPerPixel; // Количество байт на пиксель (3 или 4)
    GLuint imageSize;     // Размер памяти необходимый для хранения изображения
    GLuint type;          // Тип изображения, GL_RGB или GL_RGBA
    GLuint Height;        // Высота изображения          
    GLuint Width;         // Ширина изображения  
    GLuint Bpp;           // Количество бит на пиксель (24 или 32)
} 
TGA;

//Теперь мы должны объявить наши две структуры, 
//чтобы иметь возможность их использовать в нашем коде.

TGAHeader tgaheader; // Используется для хранения заголовка файла
TGA tga;             // Используется для хранения информации о файле

//Теперь мы должны определить пару заголовков файла в формате TGA, 
//чтобы знать какие файлы являются корректными изображениями. 
//Если это не сжатый TGA файл, то первый 12 байт будут 
//“0 0 2 0 0 0 0 0 0 0 0 0” и “0 0 10 0 0 0 0 0 0 0 0 0” при RLE сжатии. 
//Два этих значения позволят нам проверить, является ли файл корректным или нет.

// Заголовок несжатого TGA
GLubyte uTGAcompare[12] = {0,0, 2,0,0,0,0,0,0,0,0,0};

// Заголовок сжатого TGA
GLubyte cTGAcompare[12] = {0,0,10,0,0,0,0,0,0,0,0,0};

//И, наконец, определяем пару функций используемых в процессе загрузки.

 
// Загружает несжатый файл
bool LoadUncompressedTGA(Texture *, char *, FILE *);
// Загружает сжатый файл
bool LoadCompressedTGA(Texture *, char *, FILE *);


#endif// Конец защиты от повторного включения__TEXTURE_H__

