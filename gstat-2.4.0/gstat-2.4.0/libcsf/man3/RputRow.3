.lf 1 RputRow.3
.\" WARNING! THIS FILE WAS GENERATED AUTOMATICALLY BY c2man!
.\" DO NOT EDIT! CHANGES MADE TO THIS FILE WILL BE LOST!
.TH "RputRow" 3 "13 August 1999" "c2man _rputrow.c"
.SH "NAME"
RputRow \- write one row to a CSF raster file
.SH "SYNOPSIS"
.ft B
#include "csf.h"
.br
.sp
size_t RputRow
.br
(
.br
	MAP *map,
.br
	size_t rowNr,
.br
	void *buf
.br
);
.ft R
.SH "PARAMETERS"
.TP
.B "MAP *map"
map handle
.TP
.B "size_t rowNr"
Row number of row
.TP
.B "void *buf"
read-write. Buffer large enough to
hold one row in the in-file cell representation
or the in-app cell representation.
If these types are not equal then the buffer is
converted from the in-app to the in-file
cell representation.
.SH "DESCRIPTION"
RputRow writes one row of cell values to a
file.
.SH "RETURNS"
number of cells successfully written. Should be equal
to the number of columns if everything is OK.
.SH "EXAMPLE"
.lf 1 examples/_row.tr
.DS
 
 #include <stdlib.h>
 #include "csf.h"
 
 /* process a raster per row
  * minimal checking
  */
 
 extern void DoThatWithRow(REAL4 *, size_t );
 
 void main(int argc, char *argv[] )
 {
 
   REAL4 *buf;
   MAP *map;                      
   size_t r;
   size_t nrOfCells;
 
   if (argc != 2)
   {
    fprintf(stderr,"%s: no file specified\\n",argv[0]);
    exit(1);
   }
 
   map = Mopen(argv[1], M_READ_WRITE);
   if (map == NULL)  
   {  
      Mperror(argv[1]);
      exit(1);
   }
 
   nrOfCells = RgetNrCols(map); 
 
   (void)RuseAs(map, CR_REAL4); 
 
   buf = (REAL4 *)Rmalloc(map, nrOfCells);
 
   for(r=0; r < RgetNrRows(map); r++ )
   {
     RgetRow(map, r, buf); 
     DoThatWithRow(buf, nrOfCells);
     RputRow(map,r, buf); 
   }
 
   Mclose(map);
   free(buf);
 
   exit(0);
 }
 
.DE
.lf 46 RputRow.3
